{"version":3,"sources":["BooksAPI.js","components/ListingBooks.js","components/Home.js","components/Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","ListingBooks","props","thumbnail","updateShelf","currentShelf","imageLinks","react_default","a","createElement","className","style","width","height","backgroundImage","onChange","event","target","value","disabled","title","authors","Home","currentlyReading","filter","wantToRead","read","map","key","components_ListingBooks","react_router_dom","to","Search","_useState","useState","_useState2","slicedToArray","setQuery","_useState3","_useState4","result","setResult","_useState5","_useState6","empty","setEmpty","useEffect","throttleid","setTimeout","length","BooksAPI","searchedBooks","error","clearTimeout","placeholder","type","searchedBook","forEach","App","setBook","isloaded","setIsloaded","updatebook","react_router","path","exact","render","components_Home","components_Search","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cfa767b0.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from \"react\"\r\nfunction ListingBooks(props){\r\n  \r\n        const{books,updateShelf,currentShelf}=props\r\n             let thumbnail\r\n        if (books.imageLinks) {\r\n            thumbnail = books.imageLinks.thumbnail\r\n        } else {\r\n            thumbnail = ''\r\n        }\r\n    return(\r\n        <div className=\"list-books\">\r\n                        <div className=\"book\">\r\n                          <div className=\"book-top\">\r\n                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage:`url(${thumbnail})` }}></div>\r\n                            <div className=\"book-shelf-changer\">\r\n                              <select   \r\n                              onChange={(event) => updateShelf(books, event.target.value)}\r\n                              value={currentShelf}\r\n                              >\r\n                                <option value=\"move\" disabled>Move to...</option>\r\n                                <option value=\"currentlyReading\"  >Currently Reading</option>\r\n                                <option value=\"wantToRead\" >Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                                <option value=\"none\">None</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"book-title\">{books.title}</div>\r\n                          <div className=\"book-authors\">{books.authors}</div>\r\n                        </div>\r\n                    </div>\r\n         \r\n    )\r\n                      \r\n\r\n    \r\n}\r\nexport default ListingBooks;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListingBooks from \"./ListingBooks\";\r\nfunction Home (props){\r\n  const { books,updateShelf } = props;\r\n  const currentlyReading = books.filter((book) => book.shelf === \"currentlyReading\");\r\n  const wantToRead = books.filter((book) => book.shelf === \"wantToRead\");\r\n  const read = books.filter((book) => book.shelf === \"read\");\r\n \r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {currentlyReading.map((book) => (\r\n                    <li key={book.id}>\r\n                      <ListingBooks \r\n                      books={book} \r\n                      updateShelf={updateShelf}\r\n                      currentShelf={book.shelf}\r\n                      />\r\n                    </li>\r\n                  ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {wantToRead.map((book) => (\r\n                    <li key={book.id}>\r\n                      <ListingBooks books={book} \r\n                      updateShelf={updateShelf}\r\n                       currentShelf={book.shelf}\r\n                      \r\n                      />\r\n                    </li>\r\n                  ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {read.map((book) => (\r\n                    <li key={book.id}>\r\n                      <ListingBooks books={book} \r\n                      updateShelf={updateShelf}\r\n                       currentShelf={book.shelf}\r\n                      />\r\n                    </li>\r\n                  ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link to=\"/search\">\r\n            <button>Search</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n                  }\r\n                  \r\n\r\nexport default Home;\r\n","import React,{useEffect,useState} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport ListingBooks from \"./ListingBooks\"\r\nimport * as BooksAPI from '../BooksAPI'\r\nfunction Search(props){\r\n  const{books,updateShelf}=props\r\n  const [query,setQuery]=useState('')\r\n  const [result,setResult]=useState([])\r\n  const [empty,setEmpty]=useState(true)\r\nuseEffect(() => {\r\n    const  SearchQuery=()=>{\r\n          BooksAPI.search(query).then((searchedBooks) => {\r\n            if (searchedBooks.error) {\r\n                setResult([])\r\n                setEmpty(true)\r\n            }\r\n                else {\r\n             setResult(searchedBooks)\r\n             setEmpty(false)\r\n               }\r\n        }\r\n        )\r\n                }\r\n                const throttleid = setTimeout(()=>{\r\n                  if(query.length !== 0){\r\n                    SearchQuery()\r\n                  }\r\n                  else{\r\n                    setEmpty(true)\r\n                  }\r\n\r\n                },100)\r\n                return()=>{\r\n                  clearTimeout(throttleid)\r\n                };\r\n              \r\n               \r\n}, [query])\r\n\r\n        return(\r\n            <div className=\"search-books\">\r\n             \r\n            <div className=\"search-books-bar\">\r\n                <Link to=\"/\">\r\n              <button className=\"close-search\" >Close</button>\r\n              </Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                <input  placeholder=\"Search by title\"\r\n                 value={query}\r\n                 type=\"text\"\r\n                 onChange={(event)=>{setQuery(event.target.value)   \r\n                   }}/>\r\n              </div>\r\n            </div>\r\n                   <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n                    {   \r\n                        result.map(searchedBook => {\r\n                            let shelf = \"none\"\r\n                            books.forEach(book => {\r\n                                if (book.id !== searchedBook.id) {\r\n                                    searchedBook.shelf = \"none\"\r\n                                } else {\r\n                                    shelf = book.shelf\r\n                                }\r\n                            })\r\n                          if(empty===false){   \r\n                            return(\r\n                                <li key={searchedBook.id}>\r\n                                 <ListingBooks \r\n                               books={searchedBook} \r\n                            updateShelf={updateShelf}\r\n                            currentShelf={shelf}\r\n                                />\r\n                            </li>\r\n                            )\r\n                        }\r\n                        else{\r\n                          return(\r\n                            <li key={searchedBook.id}></li>\r\n                          )\r\n                        }\r\n                        }\r\n                        )\r\n                    }\r\n              </ol>\r\n            </div>\r\n            </div>\r\n        )\r\n}\r\nexport default Search","import React,{useState,useEffect} from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport Home from './components/Home'\r\nimport {Route} from \"react-router-dom\"\r\nimport Search from './components/Search'\r\n\r\nfunction App(){\r\n  const [book,setBook]=useState([]);\r\n  const [isloaded,setIsloaded]=useState(false);\r\n  useEffect(() => {\r\n\r\n    BooksAPI.getAll().then((res) => {\r\n    setBook(res);\r\n    setIsloaded(true);\r\n    })\r\n  }, [book]);\r\n  const updateShelf=(updatebook,shelf)=>{\r\n    BooksAPI.update(updatebook,shelf); \r\n  }\r\n  if(isloaded){\r\n    return (\r\n      <div className=\"app\">\r\n        <Route path=\"/\" exact render={()=>(\r\n          <Home \r\n          books={book}\r\n          updateShelf={ updateShelf}\r\n          />\r\n        ) }></Route>\r\n     <Route path=\"/search\"  render={()=>(\r\n          <Search \r\n          books={book}\r\n          updateShelf={updateShelf}\r\n          />\r\n        ) }></Route> \r\n      </div>\r\n    )\r\n     }\r\n     return(\r\n       <div>\r\n         <h1>Loading</h1>\r\n\r\n       </div>\r\n     )\r\n}\r\nexport default App;\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter } from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n\r\n<BrowserRouter>\r\n<App />, \r\n</BrowserRouter>,\r\n\r\ndocument.getElementById('root'))\r\n\r\n"],"sourceRoot":""}